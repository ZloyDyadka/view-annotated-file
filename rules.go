package main

import "bytes"

var ignoredLines = [...]string{
	"\t",
	"#",
	`.   `,
	`<autogenerated>`,
	`typecheck`,
	`escwalk:`,
	`escflood:`,
	`substituting name`,
	`not substituting name`,
	`<unknown line number>:`,
}

var ignoredContent = [...]string{
	`Before inlining`,
	`After inlining`,
}

type Stat struct {
	Good    bool
	Keyword string
}

type Stats [statCount]int

const statCount = 4

var statSpecs = [statCount]Stat{
	{false, "cannot inline"},
	{false, "escapes to heap"},
	{true, "can inline"},
	{true, "inlining call to"},
}

func (stats *Stats) Add(line []byte) {
	for i, stat := range statSpecs {
		if bytes.Contains(line, []byte(stat.Keyword)) {
			(*stats)[i]++
		}
	}
}
